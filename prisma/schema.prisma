// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  username      String          @unique
  email         String          @unique
  password      String
  emailVerified DateTime?
  image         String?
  sessions      Session[]
  workspaceUser WorkspaceUser[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  expires      DateTime
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Workspace {
  id            String          @id @default(cuid())
  name          String
  createdAt     DateTime        @default(now())
  workspaceUser WorkspaceUser[]
  project       Project[]
}

model WorkspaceUser {
  id                   String                 @id @default(cuid())
  workspaceId          String
  workspace            Workspace              @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
  userId               String
  user                 User                   @relation(fields: [userId], references: [id], onDelete: Cascade)
  role                 Role
  projectWorkspaceUser ProjectWorkspaceUser[]

  @@unique(fields: [workspaceId, userId])
}

enum Role {
  ADMIN
  MANAGER
  DEVELOPER
}

model Project {
  id                   String                 @id @default(cuid())
  name                 String
  description          String?
  workspaceId          String
  workspace            Workspace              @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
  projectWorkspaceUser ProjectWorkspaceUser[]
}

model ProjectWorkspaceUser {
  id              String        @id @default(cuid())
  projectId       String
  project         Project       @relation(fields: [projectId], references: [id], onDelete: Cascade)
  workspaceUserId String
  workspaceUser   WorkspaceUser @relation(fields: [workspaceUserId], references: [id], onDelete: Cascade)

  @@unique(fields: [projectId, workspaceUserId])
}
